{"version":3,"sources":["mock-data.js","api.js","Alert.js","Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","EventGenre.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["mockData","extractLocations","events","map","event","location","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","start","window","href","startsWith","done","locations","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","data","setItem","stringify","history","pushState","pathname","newurl","protocol","host","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","ErrorAlert","WarningAlert","OfflineWarning","Event","state","showDetails","handleShowDetails","setState","infoText","eventTime","Moment","dateTime","format","summary","timeZone","onClick","htmlLink","description","organizer","email","EventList","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numOfEvents","inputHandler","EventGenre","useState","setData","useEffect","getData","genre","split","includes","name","colors","ResponsiveContainer","height","PieChart","Pie","cx","cy","labelLine","legendType","outerRadius","fill","datakey","label","percent","toFixed","entry","index","Cell","Legend","layout","align","verticalAlign","Login","class","src","alt","rel","App","currentLocation","eventCount","response","filteredEvents","slice","locationEvents","numEvents","networkChangeHandler","number","city","shift","validToken","mounted","addEventListener","ScatterChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","allowDecimals","Tooltip","cursor","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.e64eb98f.chunk.js","sourcesContent":["const mockData = [\n    {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181161784712000\\\"\",\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:17:46.000Z\",\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\n   \"summary\": \"Learn JavaScript\",\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n   \"location\": \"London, UK\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   }\n  },\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181159875584000\\\"\",\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:14:30.000Z\",\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\n   \"summary\": \"React is Fun\",\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n   \"location\": \"Berlin, Germany\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   }\n  }\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result.error ? false : true;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n\n  if (\n    !navigator.onLine &&\n    !window.location.href.startsWith(\"http://localhost\")\n  ) {\n    const events = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return JSON.parse(events).events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      'https://vc8iyps9fd.execute-api.us-west-1.amazonaws.com/dev/api/get-events' +\n      '/' +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n\n    NProgress.done();\n    // This enables us both the events and the locations we extracted\n    return { events: result.data.events, locations} ;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = await localStorage.getItem('access_token');\n\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || !tokenCheck) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://vc8iyps9fd.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n};\n\nexport const getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://vc8iyps9fd.execute-api.us-west-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        )\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#125E8A'\n    };\n}\n\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#B80003'\n    };\n}\n\nclass WarningAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#ED7D3A'\n    };\n}\n\nclass OfflineWarning extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = '#28587B'\n    }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert, OfflineWarning };","import React, { Component } from 'react';\nimport { WarningAlert } from './Alert';\nimport Moment from 'moment';\n\nclass Event extends Component {\n    state = {\n        showDetails: false\n    }\n\n    handleShowDetails = () => {\n        if (this.state.showDetails === false) {\n            this.setState({\n                showDetails: true,\n                infoText: 'Please make sure to check the timezone to participate in the event at the proper time. Thank you!'\n            });\n\n        }\n        else {\n            this.setState({\n                showDetails: false,\n\n            })\n        }\n    };\n\n    render() {\n        const { event } = this.props;\n        const eventTime = Moment(event.start.dateTime).format('MM-DD-YYYY');\n\n        return (\n            <div className=\"event\">\n                <div className=\"eventCard\">\n                    <h1 className=\"eventCard--name\">{event.summary}</h1>\n                    <p className=\"eventCard--date\"><span>Starts at: </span>{eventTime}</p>\n                    <p className=\"eventCard--date\"><span>Timezone: </span>{event.start.timeZone}</p>\n                    <p className=\"eventCard--location\"><span>Location: </span>{event.location}</p>\n\n                    {!this.state.showDetails &&\n                        <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>Show Details</button>\n                    }\n\n                    {this.state.showDetails &&\n                        (<div className=\"eventExpanded\">\n                            <WarningAlert text={this.state.infoText} />\n                            <button className=\"eventCard--link\"><a href={event.htmlLink}>Click to Attend Event</a></button>\n                            <p className=\"eventCard--description\"><span>Description: </span>{event.description}</p>\n                            <p className=\"eventCard--organizer\"><span>Organizer: </span>{event.organizer.email}</p>\n                            <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>Hide Details</button>\n\n                        </div>)\n\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined,\n        locations: this.props.locations\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: `${value} is unavailable. Please search for another city. `,\n                showSuggestions: false\n            });\n        } else {\n            this.setState({\n                query: value,\n                suggestions,\n                infoText: '',\n                showSuggestions: true\n            });\n        }\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            suggestions: [],\n            infoText: '',\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    };\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <InfoAlert text={this.state.infoText} />\n                <label className=\"CitySearch-label\">Search for a City:</label>\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({showSuggestions: true}) }}\n                />\n                <ul  className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\n                    ))}\n                        <li key='all' onClick={() => this.handleItemClicked('all')}>\n                            <b>See all cities</b>\n                        </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n    state = {\n        numOfEvents: 32\n    }\n\n    inputHandler = (event) => {\n        const value = event.target.value;\n        this.props.updateEvents(null, value);\n        this.setState({ numOfEvents: value });\n\n        if (value < 1) {\n            this.setState({\n                infoText: 'Please input a number between 1 and 32.',\n            })\n        } else {\n            this.setState({\n                infoText: ''\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"NumberOfEvents\">\n                <label className=\"eventNumLabel\">Number of Events:</label>\n                <input\n                    className=\"eventNumInput\"\n                    type=\"number\"\n                    value={this.state.numOfEvents}\n                    onChange={this.inputHandler}\n                ></input>\n                <div id='ErrorAlert'><ErrorAlert text={this.state.infoText}/></div>\n            </div>\n        )\n    }\n}\n\nexport default NumberOfEvents;","import React, { useEffect, useState } from 'react';\nimport {\n  PieChart, Pie, Cell, ResponsiveContainer, Legend\n} from 'recharts';\n\nconst EventGenre = ({ events }) => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        setData(() => getData());\n    }, [events]);\n\n    const getData = () => {\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'Angular'];\n        const data = genres.map((genre) => {\n            const value = events.filter(({ summary }) => summary.split(' ').includes(genre)).length;\n            return { name: genre, value };\n        })\n    return data;\n    };\n\n    const colors = ['#6D6875', '#B5838D', '#FFB4A2', '#2A2E45', '#81A094']\n\n    return (\n        <ResponsiveContainer height={400}>\n            <PieChart>\n                <Pie data={data} cx=\"47%\" cy=\"50%\" labelLine={false} legendType=\"square\" outerRadius={80} fill=\"#8884d8\" datakey=\"value\" label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}>\n                    {\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={colors[index % colors.length]} name={entry.name}/>)\n                    }\n                </Pie>\n                <Legend layout=\"horizontal\" align=\"center\" verticalAlign=\"top\">\n\n                </Legend>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default EventGenre;","import React from \"react\";\n\n\nfunction Login() {\n  return (\n    <div className='App'>\n          <h1>Welcome to the Meet App</h1>\n          <h2>Please Read the Following Before Moving Forward with the Application</h2>\n          <p>The Meet App is a project given to students who are part of the Full Stack Web Development Course at CareerFoundry. The intent of creating this app is to learn skills in building a serverless, progressive web application with React using a test-driven development technique. In addition, it uses the Goggle Calendar API to fetch upcoming events from a calendar that the curriculum team at CareerFoundry have created for this sole purpose. The login prompt is meant to demonstrate skills in using an API and OAuth2 authentication flow. <strong>This website is purely for educational purposes and has no commercial intent or use.</strong> As stated in the privacy policy, no personal data is collected or saved at any stage. Please consider this application as a demonstration for the skills learned during the Full Stack immersion of the CareerFoundry program. Furthermore, the application is meant to be part of a portfolio that all CareerFoundry students work towards filling up as they progress through the curriculum. This application is meant to showcase the student's skills and should be viewed as such. Please refer to the privacy policy if needed. </p> <br />\n      <h4>Please log in to use the application</h4>\n      <div className='button_cont' align='center'>\n        <div class='google-btn'>\n          <div class='google-icon-wrapper'>\n            <img\n              class='google-icon'\n              src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n              alt='Google sign-in'\n            />\n          </div>\n          <a\n            href='https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar.readonly&response_type=code&client_id=239876640593-kac7khsulakidhvluo039913q9lgf0vf.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fveemae.github.io%2Fmeet-app%2F'\n            rel='nofollow noopener'\n            class='btn-text'\n          >\n            <b>Sign in with Google</b>\n          </a>\n        </div>\n      </div>\n      <a href='https://veemae.github.io/meet-app/privacyPolicy.html' className=\"privacyLink\" rel='nofollow noopener'>\n        Privacy Policy\n      </a>\n    </div>\n  );\n}\nexport default Login;\n","import React, { Component } from 'react';\nimport { getEvents, checkToken } from './api';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventGenre from './EventGenre';\nimport Login from './Login';\nimport { OfflineWarning } from './Alert';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n\n\nclass App extends Component {\n    state = {\n        events: [],\n        locations: [],\n        numOfEvents: 32,\n        currentLocation: 'all',\n        tokenCheck: false\n    }\n\n    async componentDidMount() {\n        const accessToken = localStorage.getItem('access_token');\n        const validToken = accessToken !== null ? await checkToken(accessToken) : false;\n        this.setState({ tokenCheck: validToken });\n        if (validToken === true) this.updateEvents()\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get('code');\n\n        this.mounted = true;\n        if (code && this.mounted === true && validToken === false) {\n            this.setState({ tokenCheck: true });\n            this.updateEvents();\n        }\n        window.addEventListener('offline', this.networkChangeHandler());\n        window.addEventListener('online', this.networkChangeHandler());\n      }\n\n    componentWillUnmount(){\n        this.mounted = false;\n    }\n\n    updateEvents = (location, eventCount) => {\n        if (location) {\n          getEvents().then((response) => {\n            const locationEvents =\n              location === 'all'\n                ? response.events\n                : response.events.filter((event) => event.location === location);\n            const filteredEvents = locationEvents.slice(0, this.state.numOfEvents);\n            return this.setState({\n              events: filteredEvents,\n              currentLocation: location,\n              locations: response.locations,\n            });\n          });\n        } else {\n          getEvents().then((response) => {\n            const locationEvents =\n              this.state.currentLocation === 'all'\n                ? response.events\n                : response.events.filter(\n                    (event) => event.location === this.state.currentLocation\n                  );\n            // If no eventCount argument is passed to updateEvents() (like when componentDidMount() calls it),\n            // It will default to slicing the numOfEvents that is already in the state.\n            const numEvents = eventCount || this.state.numOfEvents;\n            const filteredEvents = locationEvents.slice(0, numEvents);\n            return this.setState({\n              events: filteredEvents,\n              numOfEvents: eventCount,\n              locations: response.locations,\n            });\n          });\n        }\n      };\n\n    networkChangeHandler = () => {\n        if (navigator.onLine === false) {\n            return this.setState({\n                infoText: 'No network connection detected. In order to get a list of updated events, please connect to a network.'\n            });\n        } else {\n            return this.setState({\n                infoText: ''\n            });\n        }\n    }\n\n    getData = () => {\n        const { locations, events } = this.state;\n        const data = locations.map((location) => {\n            const number = events.filter((event) => event.location === location).length;\n            const city = location.split(' ').shift();\n            return { city, number };\n        })\n        return data;\n    }\n\n\n    render() {\n        return this.state.tokenCheck === false ? (\n            <div className=\"App\">\n                <Login />\n            </div>) : (\n             <div className=\"App\">\n                 <h1>Meet App</h1>\n                 <h3>A Place to Find Events Near Your City</h3>\n                <OfflineWarning text={this.state.infoText} />\n                <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n                <NumberOfEvents numOfEvents={this.state.numOfEvents} updateEvents={this.updateEvents} />\n\n                <h2>Events in Each City</h2>\n                 <div className=\"data-vis-wrapper\">\n                    <EventGenre events={this.state.events} />\n                    <ResponsiveContainer height={400}>\n                        <ScatterChart margin={{ top: 20, right: 0, bottom: 20, left: 0 }}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis type=\"category\" dataKey=\"city\" name=\"City\" />\n                            <YAxis type=\"number\" dataKey=\"number\" name=\"Number of events\" allowDecimals={false} />\n                            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                            <Scatter data={this.getData()} fill=\"#8884d8\" />\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                </div>\n\n                <EventList events={this.state.events} />\n            </div>\n        );\n     }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as atatus from 'atatus-spa';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.register();\natatus.config('e95452b92d2a42ad86ea5c621b3820ae').install();\n"],"sourceRoot":""}